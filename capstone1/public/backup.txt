<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes"/>
    <meta name="theme-color" content="#000000" />
    <link rel="manifest"  crossorigin="use-credentials" href="./manifest.json" />
    <title>CMPT 496 CAPSTONE PROJECT</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="index.css">
    <h2>CMPT 496 CAPSTONE PROJECT</h2>
    <!--      ////////////////////////////////////////////      -->
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
      $( function() {
        $( "#slider-range" ).slider({
          animate:true,
          range: true,
          min: 1999,
          max: 2016,
          width: 1,
          height: 1,
          values: [ 1999, 2016 ],
          slide: function( event, ui ) {  $( "#year" ).val( ui.values[ 0 ] + " - " + ui.values[ 1 ] );  }});
        $( "#year" ).val( $( "#slider-range" ).slider( "values", 0 ) + " - " + $( "#slider-range" ).slider( "values", 1 ) ); } );

      $( function() {
        $( "#slider-range2" ).slider({
          animate:true,
          range: true,
          min: 1999,
          max: 2016,
          width: 1,
          height: 1,
          values: [ 1999, 2016 ],
          slide: function( event, ui ) {  $( "#year2" ).val( ui.values[ 0 ] + " - " + ui.values[ 1 ] );  }});
        $( "#year2" ).val( $( "#slider-range2" ).slider( "values", 0 ) + " - " + $( "#slider-range2" ).slider( "values", 1 ) ); } );

      $( function() {
        $( "#slider-range3" ).slider({
          animate:true,
          range: true,
          min: 1999,
          max: 2016,
          width: 1,
          height: 1,
          values: [ 1999, 2016 ],
          slide: function( event, ui ) {  $( "#year3" ).val( ui.values[ 0 ] + " - " + ui.values[ 1 ] );  }});
        $( "#year3" ).val( $( "#slider-range3" ).slider( "values", 0 ) + " - " + $( "#slider-range3" ).slider( "values", 1 ) ); } );
    </script>

    </head>
    <body>
    <script src="//d3js.org/d3.v4.min.js"></script>
    <div id="root"></div>

    <fieldset>
    <div class="row">
      <div class="column left">

   <legend> <p>
      <label for="year">Accidents by weather range:</label>
      <input type="text" id="year" readonly style="border:0; color:#f6931f; font-weight:bold;">
    </p>
    <div id="slider-range" width="150px"></div><br>
    <form>
      <input type="radio" name="data type" value="number of persons" id="button1" checked><label id="buttonLabel1"> number of persons<br></label>
      <input type="radio" name="data type" value="injured" id="button2" ><label id="buttonLabel2"> injured<br></label>
      <input type="radio" name="data type" value="fatalities" id="button3" ><label id="buttonLabel3"> fatalities<br></label>
    </form></legend>

    <legend>
    <p>
      <label for="year2">Accidents by age range:</label>
      <input type="text" id="year2" readonly style="border:0; color:#f6931f; font-weight:bold;">
    </p>
    <div id="slider-range2" width="150px"></div><br>
    <form>
      <input type="radio" name="data type" value="number of persons" id="button4" checked><label id="buttonLabel4"> number of persons<br></label>
      <input type="radio" name="data type" value="injured" id="button5" ><label id="buttonLabel5"> injured<br></label>
      <input type="radio" name="data type" value="fatalities" id="button6" ><label id="buttonLabel6"> fatalities<br></label>
    </form></legend>

    <legend>
    <p>
      <label for="year3">Accidents by gender range:</label>
      <input type="text" id="year3" readonly style="border:0; color:#f6931f; font-weight:bold;">
    </p>
    <div id="slider-range3" width="150px"></div><br>
    <form>
      <input type="radio" name="data type" value="number of persons" id="button7" checked> <label id="buttonLabel7">number of persons<br></label>
      <input type="radio" name="data type" value="injured" id="button8" ><label id="buttonLabel8"> injured<br></label>
      <input type="radio" name="data type" value="fatalities" id="button9" ><label id="buttonLabel9"> fatalities<br><br></label>
      <input type="submit" value="Change" id="submitButton" onsubmit="return []">
    </form></legend>


      </div></div>
    </fieldset>

    <!--   ////////////////////////////////// -->
      <div class="column right">

      <!-- bar charts-->
        <div class = "container" id="charts">
    <script type="text/javascript">

      //Width and height
      var w = window.innerWidth-150;
      var h = 800;
      var barPadding = 1;

      // set the dimensions and margins of the graph
      var margin = {top: 0, right: 0, bottom: 30, left: 150},
              width = w - margin.left - margin.right+10,
              height = h - margin.top - margin.bottom;

      //declare variables for data selection
      var dataset2 = [];
      var rowLabels = [];
      var colLabels = [];
      var vals = [];
      var xscale, yscale, x_axis, y_axis, yAxisTranslate, xAxisTranslate;

      //Create first SVG element
      var svgOne = d3.select("body")
              .append("svg")
              .attr("width", width + margin.left + margin.right+50)
              .attr("height", height + margin.top + margin.bottom+50)
              .attr("transform", "scale(0.8)")
              .attr("font-family", "sans-serif")
              .attr("font-size", "25px")
              .append("g")
              .attr("transform",
                      "translate(" + margin.left + "," + margin.top + ")");

      //Create second SVG bar graph
      var svgTwo = d3.select("body")
              .append("svg")
              .attr("width",  width + margin.left + margin.right+50)
              .attr("height",height + margin.top + margin.bottom+50)
              .attr("transform", "scale(0.8)")
              .append("g")
              .attr("transform",
                      "translate(" + margin.left + "," + margin.top + ")");

      d3.request("weather-persons.csv")
            .mimeType("text/csv")
            .get(function (response){
              var rows = d3.csvParseRows(response.responseText);

              for (var i = 2; i < rows.length; i++) {
                  rowLabels[i-2] = rows[i][0];
                  vals.push([]);

                  for (var j = 2; j < rows[i].length; j++) {
                      if(i==2){colLabels[j-2] = rows[0][j];}


                      var number = rows[i][j];

                      if (number) {
                          number = parseInt(number);
                      } else {
                          number = 0;
                      }
                      vals[i-2][j-2] = number;
                  }
              }

                console.log(vals);
                console.log(colLabels);
                console.log(rowLabels);

                // Scale the range of the data in the domains
                x.domain(data.map(function(d) { return rowLabels; }));
                y.domain([0, d3.max(data, function(d) { return vals[0]; })]);

                // append the rectangles for the bar chart
                svg.selectAll(".bar")
                    .data(data)
                    .enter().append("rect")
                    .attr("class", "bar")
                    .attr("x", function(d) { return x(rowLabels); })
                    .attr("width", x.bandwidth())
                    .attr("y", function(d) { return y(vals); })
                    .attr("height", function(d) { return height - y(vals); });

                // add the x Axis
                svg.append("g")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x));

                // add the y Axis
                svg.append("g")
                    .call(d3.axisLeft(y));

     /*svgOne.selectAll("rect")
              .data(dataset[0])
              .enter()
              .append("rect")
              .attr("x", function(d, i) {return i * (w / rows[0].length) + 40;})
              .attr("y", function(d) {return h - (d * 8); })
              .attr("width", w / rows[0].length - barPadding)
              .attr("height", function(d) {return d * 8; })
              .attr("fill", function(d) {return "rgb(50, 50, " + (d * 8) + ")"; });

      svgOne.selectAll("text")
              .data(dataset)
              .enter()
              .append("text")
              .text(function(d) {return d; })
              .attr("text-anchor", "middle")
              .attr("x", function(d, i) {return (i * (w / rows[0].length) + (w / rows[0].length - barPadding) / 2) + 40; })
              .attr("y", function(d) { return h - (d * 8) + 14; })
              .attr("font-family", "sans-serif")
              .attr("font-size", "24px")
              .attr("fill", "white");

      svgOne.append("text")
              .attr("class", "title")
              .attr("x", (w/2) -50)
              .attr("y", 25)
              .attr("text-anchor", "middle")
              .text("Accidents by Weather Conditions");

        xscale = d3.scaleLinear()
                .domain([0, d3.max(dataset)])
                .range([0, width]);

        yscale = d3.scaleLinear()
                .domain([0, d3.max(dataset)])
                .range([height, 0]);

        x_axis = d3.axisBottom()
                .scale(xscale);

        y_axis = d3.axisLeft()
                .scale(yscale);

        yAxisTranslate = 30;

        svgOne.append("g")
                .attr("transform", "translate(35, " + yAxisTranslate +  ")")
                .call(y_axis);

        xAxisTranslate = height + 35;

        svgOne.append("g")
                .attr("transform", "translate(40, " + xAxisTranslate  +")")
                .call(x_axis)

                */
            });


       d3.request("./age-persons.csv")
          .mimeType("text/csv")
                  .get(function(response){
              var rows = d3.csvParseRows(response.responseText);

              for (var i = 2; i < rows.length; i++) {
                  dataset2[i - 2] = {
                      age: rows[i][0]
                  };
                  for (var j = 2; j < rows[i].length; j++) {
                      var year = rows[0][j];
                      var number = rows[i][j];

                      if (number) {
                          number = parseInt(number);
                      } else {
                          number = 0;
                      }

                      dataset2[i - 2][j-2] = {
                          "year": year,
                          "number": number
                      };
                  }
              }
        console.log(dataset2);

      svgTwo.selectAll("rect")
              .data(dataset2)
              .enter()
              .append("rect")
              .attr("x", function(d, i) { return i * (w / rows[0].length) + 40;  })
              .attr("y", function(d) { return h - (d * 8); })
              .attr("width",  (w / rows[0].length - barPadding) )
              .attr("height", function(d) {return d * 8; })
              .attr("fill", function(d) { return "rgb(50, 50, " + (d * 8) + ")"; });

      svgTwo.selectAll("text")
              .data(dataset2)
              .enter()
              .append("text")
              .text(function(d) { return d; })
              .attr("text-anchor", "middle")
              .attr("x", function(d, i) {return (i * (w / rows[0].length) + (w / rows[0].length - barPadding) / 2) + 40; })
              .attr("y", function(d) { return h - (d * 8) + 14; })
              .attr("font-family", "sans-serif")
              .attr("font-size", "26px")
              .attr("fill", "white");

      svgTwo.append("text")
              .attr("class", "title")
              .attr("x", (w/2)-50)
              .attr("y", 25)
              .attr("font-family", "sans-serif")
              .attr("font-size", "26px")
              .attr("text-anchor", "middle")
              .text("Accidents by Driver Age");

      xscale = d3.scaleLinear()
              .domain([0, d3.max(dataset2)])
              .range([0, width]);

      yscale = d3.scaleLinear()
              .domain([0, d3.max(dataset2)])
              .range([height, 0]);

      x_axis = d3.axisBottom()
              .scale(xscale);

      y_axis = d3.axisLeft()
              .scale(yscale);

      yAxisTranslate = 30;

      svgTwo.append("g")
              .attr("transform", "translate(35, " + yAxisTranslate +  ")")
              .call(y_axis);

      xAxisTranslate = height + 35;

      svgTwo.append("g")
              .attr("transform", "translate(40, " + xAxisTranslate  +")")
              .call(x_axis)
    });

    </script>

  <!--    /////////////////////////////////////   -->

  <!--line chart-->
  <script src="//d3js.org/d3.v4.min.js"></script>
  <script type="text/javascript">

    var w = window.innerWidth - 250;
    var h = 500;
    var barPadding = 1;

    var margin = {top: 60, right: 0, bottom: 0, left:  400},
            width = w - margin.left - margin.right,
            height = h - margin.top - margin.bottom;

    var x, y, valueline, valueline2, svg, ind2;

    svg = d3.select("body")
            .append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom+30)
            .append("g")
            .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");

    var data = [];
    d3.request("./sex-persons.csv")
        .mimeType("text/csv")
        .get(function (response){
                var rows = d3.csvParseRows(response.responseText);

                for (var i = 2; i < rows.length; i++) {
                    data[i - 2] = {
                        sex: rows[i][0]
                    };
                    for (var j = 2; j < rows[i].length; j++) {
                        var year = rows[0][j];
                        var number = rows[i][j];

                        if (number) {
                            number = parseInt(number);
                        } else {
                            number = 0;
                        }

                        data[i - 2][j-2] = {
                            "year": year,
                            "number": number
                        };
                    }
                }
        });
      console.log(data);

      x = d3.scaleTime().range([0, width-20]);
      y = d3.scaleLinear().range([height, 0]);

      valueline = d3.line()
              .x(function(d) { return x(d.date); })
              .y(function(d) { return y(d.close); });

      valueline2 = d3.line()
              .x(function(d) { return x(d.date); })
              .y(function(d) { return y(d.open); });


      x.domain(d3.extent(data, function(d) { return d.date; }));
      y.domain([0, d3.max(data, function(d) {
        return Math.max(d.close, d.open); })]);

      svg.append("path")
              .data([data])
              .attr("class", "line")
              .attr("fill", "none")
              .attr("stroke", "blue")
              .attr("stroke-linejoin", "round")
              .attr("stroke-linecap", "round")
              .attr("stroke-width", 2.0)
              .attr("d", valueline);

      svg.append("path")
              .data([data])
              .attr("class", "line")
              .attr("fill", "none")
              .attr("stroke", "red")
              .attr("stroke-linejoin", "round")
              .attr("stroke-linecap", "round")
              .attr("stroke-width", 2.0)
              .attr("d", valueline2);

      svg.append("g")
              .attr("transform", "translate(0," + height + ")")
              .call(d3.axisBottom(x));

      svg.append("g")
              .call(d3.axisLeft(y));

      svg.append("text")
              .attr("x", (width / 2)-100)
              .attr("y", -20)
              .attr("text-anchor", "middle")
              .attr("font-family", "sans-serif")
              .attr("font-size", "18px")
              .text("Accidents Men vs Women");

      svg.append("g")
              .attr("transform", "translate(0," + height + ")")
              .call(d3.axisBottom(x));

      svg.append("g")
              .call(d3.axisLeft(y));
  </script>
        </div>
      </div>
    </div>

  <!-- ////////////////////////////////  -->


  </body>
</html>
