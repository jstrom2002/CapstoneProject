<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes"/>
    <meta name="theme-color" content="#000000" />
    <link rel="manifest"  crossorigin="use-credentials" href="./manifest.json" />
    <title>CMPT 496 CAPSTONE PROJECT</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="index.css">
    <h2>CMPT 496 CAPSTONE PROJECT</h2>
    <!--      ////////////////////////////////////////////      -->
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $( function() {
            $( "#slider-range" ).slider({
                animate:true,
                range: true,
                min: 1999,
                max: 2016,
                width: 1,
                height: 1,
                values: [ 1999, 2016 ],
                slide: function( event, ui ) {  $( "#year" ).val( ui.values[ 0 ] + " - " + ui.values[ 1 ] );  }});
            $( "#year" ).val( $( "#slider-range" ).slider( "values", 0 ) + " - " + $( "#slider-range" ).slider( "values", 1 ) ); } );

        $( function() {
            $( "#slider-range2" ).slider({
                animate:true,
                range: true,
                min: 1999,
                max: 2016,
                width: 1,
                height: 1,
                values: [ 1999, 2016 ],
                slide: function( event, ui ) {  $( "#year2" ).val( ui.values[ 0 ] + " - " + ui.values[ 1 ] );  }});
            $( "#year2" ).val( $( "#slider-range2" ).slider( "values", 0 ) + " - " + $( "#slider-range2" ).slider( "values", 1 ) ); } );

        $( function() {
            $( "#slider-range3" ).slider({
                animate:true,
                range: true,
                min: 1999,
                max: 2016,
                width: 1,
                height: 1,
                values: [ 1999, 2016 ],
                slide: function( event, ui ) {  $( "#year3" ).val( ui.values[ 0 ] + " - " + ui.values[ 1 ] );  }});
            $( "#year3" ).val( $( "#slider-range3" ).slider( "values", 0 ) + " - " + $( "#slider-range3" ).slider( "values", 1 ) ); } );
    </script>

</head>
<body>
<script src="//d3js.org/d3.v4.min.js"></script>
<div id="root"></div>

<fieldset>
    <div class="row">
        <div class="column left">

            <legend> <p>
                <label for="year">Accidents by weather range:</label>
                <input type="text" id="year" readonly style="border:0; color:#f6931f; font-weight:bold;">
            </p>
                <div id="slider-range" width="150px"></div><br>
                <form>
                    <input type="radio" name="data type" value="number of persons" id="button1" checked><label id="buttonLabel1"> number of persons<br></label>
                    <input type="radio" name="data type" value="injured" id="button2" ><label id="buttonLabel2"> injured<br></label>
                    <input type="radio" name="data type" value="fatalities" id="button3" ><label id="buttonLabel3"> fatalities<br></label>
                </form></legend>

            <legend>
                <p>
                    <label for="year2">Accidents by age range:</label>
                    <input type="text" id="year2" readonly style="border:0; color:#f6931f; font-weight:bold;">
                </p>
                <div id="slider-range2" width="150px"></div><br>
                <form>
                    <input type="radio" name="data type" value="number of persons" id="button4" checked><label id="buttonLabel4"> number of persons<br></label>
                    <input type="radio" name="data type" value="injured" id="button5" ><label id="buttonLabel5"> injured<br></label>
                    <input type="radio" name="data type" value="fatalities" id="button6" ><label id="buttonLabel6"> fatalities<br></label>
                </form></legend>

            <legend>
                <p>
                    <label for="year3">Accidents by gender range:</label>
                    <input type="text" id="year3" readonly style="border:0; color:#f6931f; font-weight:bold;">
                </p>
                <div id="slider-range3" width="150px"></div><br>
                <form>
                    <input type="radio" name="data type" value="number of persons" id="button7" checked> <label id="buttonLabel7">number of persons<br></label>
                    <input type="radio" name="data type" value="injured" id="button8" ><label id="buttonLabel8"> injured<br></label>
                    <input type="radio" name="data type" value="fatalities" id="button9" ><label id="buttonLabel9"> fatalities<br><br></label>
                    <input type="submit" value="Change" id="submitButton" onsubmit="return []">
                </form></legend>


        </div></div>
</fieldset>

<!--   ////////////////////////////////// -->
<div class="column right">

    <!-- bar charts-->
    <div class = "container" id="charts">
        <script src="//d3js.org/d3.v4.min.js"></script>
        <script type="text/javascript">

            var data = [];
            var data2 = [];

            // set the dimensions and margins of the graph
            var margin = {top: 20, right: 20, bottom: 40, left: 40},
                width = 960 - margin.left - margin.right,
                height = 500 - margin.top - margin.bottom;

            // set the ranges
            var x = d3.scaleBand()
                .range([0, height])
                .padding(0.05);
            var y = d3.scaleLinear()
                .range([width, 0]);

            // append the svg object to the body of the page
            // append a 'group' element to 'svg'
            // moves the 'group' element to the top left margin
            var svgOne = d3.select("#charts").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform","translate(" + margin.left + "," + margin.top + ")");

            // get the data
            d3.request("weather-persons.csv")
                .mimeType("text/csv")
                .get(function (response){
                    var rows = d3.csvParseRows(response.responseText);
                    for (var i = 2; i < rows.length; i++) {
                        data.push([]);

                        for (var j = 2; j < rows[i].length; j++) {
                            var year = rows[0][j];
                            var number = rows[i][j];

                            if (year) {
                                year = parseInt(year);
                            } else {
                                year = 0;
                            }
                            if (number) {
                                number = parseInt(number);
                            } else {
                                number = 0;
                            }


                            data[i - 2][j-2] = {
                                "salesperson": year,
                                "sales": number
                            };
                        }
                    }
                    console.log(data[0]);

                    // Scale the range of the data in the domains
                    x.domain(data[0].map(function(d) { return d.salesperson; }));
                    y.domain([0, d3.max(data[0], function(d) { return d.sales; })]);

                    // append the rectangles for the bar chart
                    svgOne.selectAll(".bar")
                        .data(data[0])
                        .enter().append("rect")
                        .attr("class", "bar")
                        .attr("x", function(d) { return x(d.salesperson); })
                        .attr("width", x.bandwidth())
                        .attr("y", function(d) { return y(d.sales)-30; })
                        .attr("height", function(d) { return height - y(d.sales); })
                        .attr("fill", function(d) {return "rgb(50, 50, " + (y(d.sales) * 0.8) + ")"; })
                        .attr("transform", "translate(10, 0) rotate(90 200 200)");

                    // add the y Axis
                    svgOne.append("g")
                        .attr("transform", "rotate(0 0 0) scale(1 1) translate(0 0)")
                        .call(d3.axisLeft(x));

                    // add the x Axis
                    /*    svgOne.append("g")
                            .attr("transform", "rotate(90 200 200)")
                            .attr("transform", "scale(1, 1) translate(0 "+ height +")")
                            .call(d3.axisBottom(y));    */
                });


            var data2 = [];

            // set the ranges
            var x2 = d3.scaleBand()
                .range([0, height])
                .padding(0.05);
            var y2 = d3.scaleLinear()
                .range([width, 0]);

            // append the svg object to the body of the page
            // append a 'group' element to 'svg'
            // moves the 'group' element to the top left margin
            var svgTwo = d3.select("#charts").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform","translate(" + margin.left + "," + margin.top + ")");

            // get the data
            d3.request("age-persons.csv")
                .mimeType("text/csv")
                .get(function (response){
                    var rows = d3.csvParseRows(response.responseText);
                    for (var i = 2; i < rows.length; i++) {
                        data2.push([]);

                        for (var j = 2; j < rows[i].length; j++) {
                            var year = rows[j][0];
                            var number = rows[i][j];

                            if (year) {
                                year = parseInt(year);
                            } else {
                                year = 0;
                            }
                            if (number) {
                                number = parseInt(number);
                            } else {
                                number = 0;
                            }


                            data2[i - 2][j-2] = {
                                "salesperson": year,
                                "sales": number
                            };
                        }
                    }
                    console.log(data2[0]);

                    // Scale the range of the data in the domains
                    x2.domain(data2[0].map(function(d) { return d.salesperson; }));
                    y2.domain([0, d3.max(data2[0], function(d) { return d.sales; })]);

                    // append the rectangles for the bar chart
                    svgTwo.selectAll(".bar")
                        .data(data2[0])
                        .enter().append("rect")
                        .attr("class", "bar")
                        .attr("x", function(d) { return x2(d.salesperson); })
                        .attr("width", x.bandwidth())
                        .attr("y", function(d) { return y2(d.sales)-30; })
                        .attr("height", function(d) { return height - y2(d.sales); })
                        .attr("fill", function(d) {return "rgb(50, 50, " + (y2(d.sales) * 0.8) + ")"; })
                        .attr("transform", "translate(10, 0) rotate(90 200 200)");

                    // add the y Axis
                    svgTwo.append("g")
                        .attr("transform", "rotate(0 0 0) scale(1 1) translate(0 0)")
                        .call(d3.axisLeft(x2));

                    // add the x Axis
                    /*    svgOne.append("g")
                            .attr("transform", "rotate(90 200 200)")
                            .attr("transform", "scale(1, 1) translate(0 "+ height +")")
                            .call(d3.axisBottom(y));    */

                    svgTwo.append("text")
                        .attr("x", (height / 2))
                        .attr("y", 0)
                        .attr("text-anchor", "middle")
                        .attr("font-family", "sans-serif")
                        .attr("font-size", "18px")
                        .text("Accidents by Age");

                });


        </script>

        <!--    /////////////////////////////////////   -->

        <!--line chart-->
        <script src="//d3js.org/d3.v4.min.js"></script>
        <script type="text/javascript">

            var w = window.innerWidth - 250;
            var h = 500;
            var barPadding = 1;

            var margin = {top: 60, right: 0, bottom: 0, left:  400},
                width = w - margin.left - margin.right,
                height = h - margin.top - margin.bottom;

            var x, y, valueline, valueline2, svg, ind2;

            svg = d3.select("body")
                .append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom+30)
                .append("g")
                .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");

            var data = [];
            d3.request("./sex-persons.csv")
                .mimeType("text/csv")
                .get(function (response){
                    var rows = d3.csvParseRows(response.responseText);

                    for (var i = 2; i < rows.length; i++) {
                        data[i - 2] = {
                            sex: rows[i][0]
                        };
                        for (var j = 2; j < rows[i].length; j++) {
                            var year = rows[0][j];
                            var number = rows[i][j];

                            if (number) {
                                number = parseInt(number);
                            } else {
                                number = 0;
                            }

                            data[i - 2][j-2] = {
                                "year": year,
                                "number": number
                            };
                        }
                    }
                });
            console.log(data);

            x = d3.scaleTime().range([0, width-20]);
            y = d3.scaleLinear().range([height, 0]);

            valueline = d3.line()
                .x(function(d) { return x(d.date); })
                .y(function(d) { return y(d.close); });

            valueline2 = d3.line()
                .x(function(d) { return x(d.date); })
                .y(function(d) { return y(d.open); });


            x.domain(d3.extent(data, function(d) { return d.date; }));
            y.domain([0, d3.max(data, function(d) {
                return Math.max(d.close, d.open); })]);

            svg.append("path")
                .data([data])
                .attr("class", "line")
                .attr("fill", "none")
                .attr("stroke", "blue")
                .attr("stroke-linejoin", "round")
                .attr("stroke-linecap", "round")
                .attr("stroke-width", 2.0)
                .attr("d", valueline);

            svg.append("path")
                .data([data])
                .attr("class", "line")
                .attr("fill", "none")
                .attr("stroke", "red")
                .attr("stroke-linejoin", "round")
                .attr("stroke-linecap", "round")
                .attr("stroke-width", 2.0)
                .attr("d", valueline2);

            svg.append("g")
                .attr("transform", "translate(0," + height + ")")
                .call(d3.axisBottom(x));

            svg.append("g")
                .call(d3.axisLeft(y));

            svg.append("text")
                .attr("x", (width / 2)-100)
                .attr("y", -20)
                .attr("text-anchor", "middle")
                .attr("font-family", "sans-serif")
                .attr("font-size", "18px")
                .text("Accidents Men vs Women");

            svg.append("g")
                .attr("transform", "translate(0," + height + ")")
                .call(d3.axisBottom(x));

            svg.append("g")
                .call(d3.axisLeft(y));
        </script>
    </div>
</div>
</div>

<!-- ////////////////////////////////  -->


</body>
</html>